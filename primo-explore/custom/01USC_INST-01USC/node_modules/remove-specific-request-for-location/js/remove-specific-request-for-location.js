//Auto generated code by primo app store DO NOT DELETE!!! -START-
app.controller('removeSpecificRequestForLocationController', ['removeSpecificRequestForLocationStudioConfig', '$scope', function (addonParameters, $scope) {
    var vm = this.parentCtrl;
    var services2;

    $scope.$watch(function () {
        return vm.services.serviceinfo ? vm.services.serviceinfo : undefined;
    }, function () {
        if (services2 && services2.length !== vm.services.serviceinfo.length) {
            services2 = vm.services.serviceinfo;
            calculateRemove();
        } else if (!services2 && vm.services.serviceinfo) {
            services2 = vm.services.serviceinfo;
            calculateRemove();
        } else {
            services2 = vm.services.serviceinfo;
        }
    });

    function calculateRemove() {
        for (let addonParameter of addonParameters) {
            var libraryCode = addonParameter.libraryCode;
            var subLocationCodes = addonParameter.subLocationCode;
            var displayLabel = addonParameter.displayLabel;
            var subLocationCode = subLocationCodes ? subLocationCodes.split(/\s*,\s*/) : [];
            var holding = [];
            if (vm.item.delivery.holding) {
                holding = vm.item.delivery.holding.filter(function (holding) {
                    return libraryCode === holding.libraryCode;
                }).filter(function (holding) {
                    return subLocationCode.indexOf(holding.subLocationCode) !== -1;
                });
            }
            if (services2.length > 0 && holding.length === 0) {
                services2 = services2.filter(function (e) {
                    return displayLabel !== e.type;
                });
            }
        }
        vm.services.serviceinfo = services2;
    }
}]);

app.component('removeSpecificRequestForLocation', {
    controller: 'removeSpecificRequestForLocationController',
    bindings: {parentCtrl: '<'}
});

//Auto generated code by primo app store DO NOT DELETE!!! -END-